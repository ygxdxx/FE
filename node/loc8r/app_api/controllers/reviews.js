var mongoose = require('mongoose');var Loc = mongoose.model('Location');var sendResponse = function (res, status, content) {    res.status(status);    res.json(content);};var reviewsCreate = function (req, res) {};var reviewsReadOne = function (req, res) {    if (req.params && req.params.reviewid && req.params.locationid) {        Loc.findById(req.params.locationid)            .select('name reviews')            .exec(function (err, locationObj) {                if (!locationObj) {                    sendResponse(res, 404, {'message': 'locationid not found'});                    return;                } else if (err) {                    sendResponse(res, 404, err);                    return;                }                if (locationObj.reviews && locationObj.reviews.length > 0) {                    var reviewObj = locationObj.reviews[req.params.reviewid];                    if (!reviewObj) {                        sendResponse(res, 404, {'message': 'reviewid not found'});                    } else {                        var response = {                            location: {                                name: locationObj.name,                                id: req.params.locationid                            },                            review: reviewObj                        };                        sendResponse(res, 200, response);                    }                } else {                    sendResponse(res, 404, {'message': 'No reviews found'});                }            })    } else {        sendResponse(res, 404, {'message': 'not review id in request'})    }};var reviewsUpdateOne = function (req, res) {};var reviewDeleteOne = function (req, res) {};module.exports.reviewsCreate = reviewsCreate;module.exports.reviewsReadOne = reviewsReadOne;module.exports.reviewsUpdateOne = reviewsUpdateOne;module.exports.reviewsDeleteOne = reviewDeleteOne;